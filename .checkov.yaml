# Checkov configuration for AuditLedger Terraform modules
# https://www.checkov.io/2.Basics/Suppressing%20and%20Skipping%20Policies.html

# Skip checks for example code (templates that users customize)
skip-check:
  # Azure App Service examples - production features users should configure
  - CKV_AZURE_225  # Zone redundancy - depends on user's availability requirements
  - CKV_AZURE_211  # Production SKU - examples use cheaper tiers for demos
  - CKV_AZURE_212  # Minimum instances - depends on user's scaling needs
  - CKV_AZURE_63   # HTTP logging - user-configurable
  - CKV_AZURE_213  # Health checks - user-configurable
  - CKV_AZURE_65   # Detailed error messages - user-configurable
  - CKV_AZURE_222  # Public network access - depends on user's architecture
  - CKV_AZURE_17   # Client certificates - depends on user's auth strategy
  - CKV_AZURE_88   # Azure Files - depends on user's storage needs
  - CKV_AZURE_66   # Failed request tracing - user-configurable
  - CKV_AZURE_13   # App Service Authentication - user implements their auth

  # EC2 examples - security features users should customize
  - CKV_AWS_260    # Security group ingress - uses variables for user configuration
  - CKV_AWS_382    # Security group egress - uses variables for user configuration
  - CKV_AWS_79     # IMDSv2 - should be enabled in production (example template)
  - CKV_AWS_126    # Detailed monitoring - cost consideration, user decides
  - CKV_AWS_135    # EBS optimization - depends on instance type and workload
  - CKV_AWS_8      # EBS encryption - should be enabled (example template)

  # ECS examples - logging configuration
  - CKV_AWS_338    # CloudWatch retention - user defines retention policy
  - CKV_AWS_158    # CloudWatch KMS encryption - user configures encryption

  # Lambda examples - advanced features users may not need
  - CKV_AWS_50     # X-Ray tracing - optional, user decides based on monitoring needs
  - CKV_AWS_117    # Lambda in VPC - depends on architecture, not always required
  - CKV_AWS_116    # Dead Letter Queue - depends on error handling strategy
  - CKV_AWS_173    # Environment variable encryption - user configures if secrets present
  - CKV_AWS_272    # Code signing - depends on security requirements
  - CKV_AWS_115    # Concurrent execution limit - user configures based on needs
  - CKV_AWS_363    # Lambda runtime - dotnet6 is deprecated, but newer runtimes not yet supported by AWS

  # S3 module - encryption and lifecycle
  - CKV_AWS_300    # Abort incomplete uploads - optional optimization, user can enable
  - CKV_AWS_145    # S3 KMS encryption - optional, configurable via kms_key_id variable (defaults to AES256)
  - CKV2_AWS_67    # S3 KMS encryption - optional, module supports KMS but defaults to AES256 for simplicity
  - CKV_AWS_144    # Cross-region replication - optional, depends on user's DR/HA requirements and budget

  # Azure Blob module - storage account features
  - CKV_AZURE_33   # Queue service logging - not applicable, we only use Blob storage
  - CKV_AZURE_59   # Public access - controlled via network_default_action variable (defaults to Deny)
  - CKV_AZURE_35   # Network default action - controlled via variable (defaults to Deny)
  - CKV_AZURE_36   # Trusted Microsoft Services - controlled via network_bypass variable
  - CKV_AZURE_206  # Private endpoints - optional, depends on user's VNet architecture and requirements
  - CKV2_AZURE_1   # Customer Managed Keys - optional, Microsoft-managed encryption is sufficient for most cases
  - CKV2_AZURE_8   # Customer Managed Keys - optional, users can enable if required for compliance
  - CKV2_AZURE_38  # Customer Managed Keys - optional, depends on organization's encryption key management policy

# Only scan Terraform files
framework:
  - terraform

# Scan these directories
directory:
  - .

# Compact output for CI
compact: true

# Don't fail on soft failures
soft-fail: false

# Output format for GitHub Actions
output: sarif
